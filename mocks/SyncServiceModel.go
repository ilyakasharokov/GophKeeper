// Code generated by mockery v2.10.0. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	models "gophkeeper/internal/common/models"

	time "time"
)

// SyncServiceModel is an autogenerated mock type for the SyncServiceModel type
type SyncServiceModel struct {
	mock.Mock
}

// Sync provides a mock function with given fields: ctx, userID, notes, lastSyncDate
func (_m *SyncServiceModel) Sync(ctx context.Context, userID string, notes []models.Note, lastSyncDate time.Time) ([]models.Note, time.Time, error) {
	ret := _m.Called(ctx, userID, notes, lastSyncDate)

	var r0 []models.Note
	if rf, ok := ret.Get(0).(func(context.Context, string, []models.Note, time.Time) []models.Note); ok {
		r0 = rf(ctx, userID, notes, lastSyncDate)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]models.Note)
		}
	}

	var r1 time.Time
	if rf, ok := ret.Get(1).(func(context.Context, string, []models.Note, time.Time) time.Time); ok {
		r1 = rf(ctx, userID, notes, lastSyncDate)
	} else {
		r1 = ret.Get(1).(time.Time)
	}

	var r2 error
	if rf, ok := ret.Get(2).(func(context.Context, string, []models.Note, time.Time) error); ok {
		r2 = rf(ctx, userID, notes, lastSyncDate)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}
